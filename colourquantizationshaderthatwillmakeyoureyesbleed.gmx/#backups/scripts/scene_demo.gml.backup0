// 2020-05-05 05:25:52
/*
    WARNING : UNOPTIMIZED PILE OF MISERABLE CODE AHEAD -- Prepare your brain
*/
// Begin 3D drawing
d3d_start();
d3d_set_culling(false);
d3d_set_hidden(true);
draw_set_alpha_test(true);
draw_set_alpha_test_ref_value(0.5);

// 1] Set up the camera
d3d_set_projection_ext(cameraX, cameraY, cameraZ, cameraXto, cameraYto, cameraZto, 0, -1, 0, cameraFov, oKORN.winWid / oKORN.winHei, 0.1, 2048);

// 2] Draw background
var _bgrot = current_time * 0.0001 * 360.0;
d3d_transform_set_rotation_x(90);
d3d_transform_add_rotation_y(_bgrot);
d3d_draw_cylinder(sceneBGSize, sceneBGSize, -2048, -sceneBGSize, -sceneBGSize, 2048, texScroller, -2, 3, false, 16);

// 2-2] Draw rotating plate
draw_set_color(make_color_hsv(current_time * 0.0005 * 255, 40, 255));
var _platerot = current_time * 0.0002 * 360.0;
d3d_transform_set_rotation_x(90);
d3d_transform_add_rotation_y(_platerot);
d3d_transform_add_translation(scenePlateX, scenePlateY, scenePlateZ);
d3d_draw_floor(-scenePlateSize, -scenePlateSize, 0, scenePlateSize, scenePlateSize, 0, scenePlateTex, 4, 4);

// 3] Cat
var _guyy = -scenePlateHeight + sceneGuyBaseY;
var _guyrot = _platerot * 2.0;

// Animate gato
var _guyanimt = current_time * 0.001 * pi;
var _guyanimfrac = clamp(((_guyanimt % pi) + (pi * 0.5)) / pi, 0.0, 1.0);
var _guybounce = (1.0 - power(1.0 - abs(sin(_guyanimt)), 2.0));
var _guyanimy = _guybounce * -16.0;
var _guyanimr = cos(_guyanimt + pi) * 12.0;
var _guyanimsquash = sin(_guyanimt * 10.0) * (1.0 - _guyanimfrac) * 0.5;

// Disable alpha write to prevent alpha "leaking" on the surface
draw_set_color_write_enable(1, 1, 1, 0);

// (shadow)
d3d_transform_set_scaling(1 - _guyanimsquash, 1 + _guyanimsquash, 1);
d3d_transform_add_translation(0, 0, _guyanimy);
d3d_transform_add_rotation_y(_guyrot + _guyanimr);
// draw_set_blend_mode_ext(bm_dest_color, bm_zero);
draw_set_color(c_dkgray);
draw_set_alpha(0.75);
d3d_draw_wall(-sceneGuyWidth, -1, -sceneGuyHeight, sceneGuyWidth, -1, 0, sceneGuyTexShadow, 1, 1);
draw_set_alpha(1.0);
draw_set_color(c_white);
// draw_set_blend_mode(bm_normal);

// (cat)
draw_set_alpha_test(false);
d3d_set_hidden(false);
d3d_transform_set_scaling(1 - _guyanimsquash, 1 + _guyanimsquash, 1);
d3d_transform_add_rotation_y(_guyanimr);
d3d_transform_add_rotation_x(90);
d3d_transform_add_rotation_y(_guyrot);
d3d_transform_add_translation(scenePlateX + sceneGuyBaseX, scenePlateY + sceneGuyBaseY + _guyanimy, scenePlateZ);
d3d_draw_wall(-sceneGuyWidth, 0, -sceneGuyHeight, sceneGuyWidth, 0, 0, sceneGuyTex, 1, 1);
draw_set_alpha_test(true);
d3d_set_hidden(true);

draw_set_color_write_enable(1, 1, 1, 1);

// 4] Text
var _textstr = "꺄아앍 고양이다#괴ㅏ아아아앍;";
var _textcolour = make_color_hsv(current_time * 0.01 * 255, 150, 255);
// Stop depth testing
d3d_set_hidden(false);

d3d_transform_set_rotation_y(180 + _guyrot * 0.1 + random_range(-10, 10));
d3d_transform_add_rotation_z(random_range(-10, 10));
d3d_transform_add_scaling(0.75, 0.75, 0.75);
d3d_transform_add_translation(scenePlateX + sceneGuyBaseX + random_range(-32, 32), scenePlateY + sceneGuyBaseY - sceneGuyHeight + random_range(-32, 32), scenePlateZ + random_range(-32, 32));
draw_set_halign(1); draw_set_valign(1);
draw_text_color(0, 1, _textstr, 0, 0, 0, 0, 1.0);

d3d_transform_add_translation(0, 0, -1);
draw_text_color(0, 0, _textstr, _textcolour, _textcolour, _textcolour, _textcolour, 1.0);

// re-enable depth testing
d3d_set_hidden(true);

// Reset 3D settings
draw_set_alpha_test(false);
d3d_transform_set_identity();
d3d_end();

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 3D wacky demo stuff
cameraX = 0;
cameraY = -40;
cameraZ = -80;
cameraXto = 0;
cameraYto = -20;
cameraZto = 0;

cameraFov = 90;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Objects

// scroller surface (used for background)
surfScrollerWid = 1024;
surfScrollerHei = 512;
surfScroller = surface_create(surfScrollerWid, surfScrollerHei);
texScroller = surface_get_texture(surfScroller);
scrollerStr = "마참내. 햄버거 2.0.";
scrollerStrScale = 5.0;

// bg
sceneBGSize = 1024;
sceneBGTex = sprite_get_texture(texChecker, 1);

// plate
scenePlateX = 0;
scenePlateY = 0;
scenePlateZ = 0;
scenePlateSize = 64;
scenePlateHeight = 4;
scenePlateTex = sprite_get_texture(texChecker, 0);

// guy / cat
sceneGuyBaseX = 0;
sceneGuyBaseY = 0;
sceneGuyBaseZ = 0;
sceneGuyWidth = 32;
sceneGuyHeight = 64;
sceneGuyTex = sprite_get_texture(texCharacter, 0);
sceneGuyTexShadow = sprite_get_texture(texCharacter, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Keep scroller text surface alive
if (!surface_exists(surfScroller))
{
    surfScroller = surface_create(surfScrollerWid, surfScrollerHei);
    texScroller = surface_get_texture(surfScroller);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw debug values
/*
if (global.screenState == SCREEN.MAIN)
{
    var _colour1 = $00DDFF;
    var _colour2 = $00AADD;
    var _debugstr = "CAMPOS : [" + string(cameraX) + ", " + string(cameraY) + ", " + string(cameraZ) + "]#";
    _debugstr += "CAMTO : [" + string(cameraXto) + ", " + string(cameraYto) + ", " + string(cameraZto) + "]#";
    
    draw_set_halign(2); draw_set_valign(0);
    draw_text_color(oKORN.winWid - 10, 11, _debugstr, 0, 0, 0, 0, 1.0);
    draw_text_color(oKORN.winWid - 10, 10, _debugstr, _colour1, _colour1, _colour2, _colour2, 1.0);
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw to source surface
/*
    WARNING : UNOPTIMIZED PILE OF MISERABLE CODE AHEAD -- Prepare your brain
*/
if (global.screenState == SCREEN.MAIN)
{
    // Update demoscene-ass looking scroller surface
    scene_update_scroller();
    
    // Draw scene
    draw_clear(c_black);
    scene_demo();
    
    // Visualize scroller surface
    // draw_surface_stretched(surfScroller, 0, 0, oKORN.winWid, oKORN.winHei);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
